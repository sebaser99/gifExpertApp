{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","image","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"4MAGe,SAASA,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,cAAgB,EACbC,mBAAS,IADI,mBAC1CC,EAD0C,KAC9BC,EAD8B,KAcjD,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAIlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAhBS,SAACP,GAClBF,EAAcE,EAAEQ,OAAOF,QAgBfG,YAAY,sC,mCCvBfC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEII,MAAMF,GAFV,cAEbG,EAFa,gBAGEA,EAASC,OAHX,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAMC,GACVC,MAAQF,EAAME,MACdV,IAAKQ,EAAMG,OAAOC,iBAAiBZ,QATxB,kBAYZM,GAZY,4CAAH,sDCGPO,G,KAAc,SAAC,GAAkB,IAAjBb,EAAgB,EAAhBA,IAAKU,EAAW,EAAXA,MAC9B,OACI,sBAAKI,UAAU,+CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,SCDHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHV,SAACA,GAAY,IAAD,EAEXf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAiBrC,OAVAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAhB,GACpBc,EAAS,CACLf,KAAMC,EACTY,SAAS,SAId,CAACpB,IAEGqB,EDPyBI,CAAazB,GAAhCa,EAPsB,EAO5BN,KAAca,EAPc,EAOdA,QAGrB,OACI,qCACA,oBAAIJ,UAAU,mDAAd,SAAkEhB,IACjEoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,aAAf,SAESH,EAAOJ,KAAI,SAAAC,GAAK,OACb,cAAC,EAAD,eAAgCA,GAAdA,EAAMC,aEQ7Be,EA3BK,WAAK,IAAD,EACgBzC,mBAAS,CAAC,gBAD1B,mBACbQ,EADa,KACDT,EADC,KAMpB,OACI,qCAEI,oBAAIgC,UAAU,OAAd,4BACA,cAACjC,EAAD,CAAaC,cAAeA,IAC5B,6BAEQS,EAAWgB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CACIA,SAAUA,GACLA,YCdjC2B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.48f9a33e.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes  from 'prop-types';\r\n\r\nexport default function AddCategory({setCategories}) {\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(categories => [inputValue, ...categories ])\r\n            setInputValue('')\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleChange}\r\n                placeholder=\"Busca un nuevo equipo de futbol\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}","export const getGifs = async (category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=su6p61PxGCfBQN2osOm86KjQwEgkVmVO`\r\n    const response = await fetch(url)\r\n    const {data} = await response.json()\r\n\r\n    const gifs = data.map(image =>{\r\n        return { \r\n            id: image.id,\r\n            title : image.title,\r\n            url: image.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs\r\n}","import React from 'react';\r\nimport 'animate.css';\r\n\r\nexport const GifGridItem = ({url, title}) => {\r\n    return (\r\n        <div className=\"grid-item animate__animated animate__fadeIn \">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport 'animate.css';\r\n// import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    // const [images, setImages] = useState([])\r\n\r\n    // useEffect(()=>{\r\n    //     getGifs(category).then(setImages)\r\n    // }, [category])\r\n\r\n    const {data: images, loading} = useFetchGifs(category); //custom hook\r\n    \r\n    \r\n    return (\r\n        <>\r\n        <h3 className=\"grid-title animate__animated animate__rubberBand\">{category}</h3>\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n        <div className=\"grid-items\">\r\n            \r\n                {images.map(image =>(\r\n                    <GifGridItem key={image.id} {...image}/>\r\n                ))\r\n                }\r\n        </div>\r\n        </>\r\n  \r\n    )\r\n}\r\n"," import { useState, useEffect } from \"react\";\r\n import { getGifs } from \"../helpers/getGifs\";\r\n \r\n export const useFetchGifs = (category)=>{\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(()=>{\r\n        getGifs(category).then(gifs =>{\r\n           setState({\r\n               data: gifs,\r\n            loading: false\r\n           })\r\n        })\r\n        \r\n    }, [category])\r\n\r\n    return state;\r\n }","import React, {useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp= ()=>{\r\n    const [categories, setCategories] = useState([\"Real Madrid\"])\r\n    // const handleCategory = ()=>{\r\n    //     // setCategories([...categories, \"AC Milan\"])\r\n    //     setCategories(categories => [...categories, \"AC Milan\"])\r\n    // }\r\n    return(\r\n        <>\r\n            \r\n            <h2 className=\"logo\">Gif Expert App</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid\r\n                            category={category}\r\n                            key={category}\r\n                        />\r\n\r\n                        )\r\n                }\r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}